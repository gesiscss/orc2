stages:
  - build
  - test
  - test-stage
  - test-prod
  - deploy-stage
  - deploy-prod

Build container with Kubernetes and git-crypt:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == 'main'
      changes:
        - Dockerfile
  image: docker-private.gesis.intra/gesis/dc:5.7
  services:
    - name:  docker-private.gesis.intra/gesis/dind:5.5
      alias: docker
  dependencies: []
  script:
    - docker build --target k8s --no-cache --pull -t docker-private-snapshots.gesis.intra/gesis/ilcm/orc2/k8s:latest .
    - docker push docker-private-snapshots.gesis.intra/gesis/ilcm/orc2/k8s:latest

Build container with Ansible and git-crypt:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == 'main'
      changes:
        - Dockerfile
  image: docker-private.gesis.intra/gesis/dc:5.7
  services:
    - name:  docker-private.gesis.intra/gesis/dind:5.5
      alias: docker
  dependencies: []
  script:
    - docker build --target ansible --no-cache --pull -t docker-private-snapshots.gesis.intra/gesis/ilcm/orc2/ansible:latest .
    - docker push docker-private-snapshots.gesis.intra/gesis/ilcm/orc2/ansible:latest

gesis ansible lint:
  stage: test
  rules:
    - if: (($CI_PIPELINE_SOURCE != "schedule") && $CI_COMMIT_BRANCH == 'main') || $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - ansible/**/*
  image: 
    name: docker-private-snapshots.gesis.intra/gesis/ilcm/orc2/ansible:latest
    entrypoint: [""]
  dependencies: []
  script:
    - ansible-lint --version
    - ansible-lint --show-relpath ansible

.gesis ansible deploy:
  stage: deploy
  image: 
    name: docker-private-snapshots.gesis.intra/gesis/ilcm/orc2/ansible:latest
    entrypoint: [""]
  variables:
    ANSIBLE_INVENTORY: template
  before_script:
    - mkdir ~/.ssh/
    - echo StrictHostKeyChecking no > ~/.ssh/config
    - cp $ANSIBLE_SSH_PUBLIC_KEY ~/.ssh/id_ed25519.pub
    - cp $ANSIBLE_SSH_PRIVATE_KEY ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - mkdir tmp
  script:
    - echo $ANSIBLE_VAULT > ansible/.ansible-vault-password-file
    - ansible --version
    - >
      ansible-playbook
      --vault-password-file ansible/.ansible-vault-password-file
      --extra-vars @ansible/vault/$ANSIBLE_INVENTORY.yml
      --extra-vars "INVENTORY_NAME=$ANSIBLE_INVENTORY"
      --extra-vars "ANSIBLE_CONTROL_NODE_TMP=$(pwd)/tmp"
      --inventory ansible/inventories/$ANSIBLE_INVENTORY
      --user ansible
      ansible/orc2.yml

gesis ansible stage deploy:
  stage: deploy-stage
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - ansible/**/*
        - nginx/**/*
  variables:
    ANSIBLE_INVENTORY: stage
  extends:
    - .gesis ansible deploy

gesis ansible production deploy:
  stage: deploy-prod
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_BRANCH == 'main'
      changes:
        - ansible/**/*
        - nginx/**/*
  variables:
    ANSIBLE_INVENTORY: production
  extends:
    - .gesis ansible deploy

gesis helm lint:
  stage: test
  rules:
    - if: (($CI_PIPELINE_SOURCE != "schedule") && $CI_COMMIT_BRANCH == 'main') || $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - helm/**/*
  image: 
    name: docker-private-snapshots.gesis.intra/gesis/ilcm/orc2/k8s:latest
    entrypoint: [""]
  dependencies: []
  script:
    - helm version
    - helm dependency update ./helm/charts/gesis
    - helm lint ./helm/charts/gesis
    - helm template gesis ./helm/charts/gesis > gesis.helm.chart.yaml

gesis helm deploy:
  stage: deploy-prod
  rules:
    - if: ($CI_PIPELINE_SOURCE != "schedule") && $CI_COMMIT_BRANCH == 'main'
      changes:
        - helm/**/*
  image: 
    name: docker-private-snapshots.gesis.intra/gesis/ilcm/orc2/k8s:latest
    entrypoint: [""]
  dependencies: []
  script:
    - cat $git_crypt_secret_key | base64 -d > git_crypt_secret_key
    - git-crypt unlock git_crypt_secret_key
    - kubectl config use-context ilcm/orc2:kubernetes
    - helm version
    - helm dependency update ./helm/charts/gesis
    - |
      helm upgrade --cleanup-on-fail \
      --install binderhub ./helm/charts/gesis \
      --namespace=gesis \
      --create-namespace \
      -f ./helm/config/prod.yaml \
      -f ./helm/config/_secret-prod.yaml \
      -f ./helm/config/common/_secret-mybinder.org-common.yaml

pages:
  stage: build
  rules:
    - if: ($CI_PIPELINE_SOURCE != "schedule") && $CI_COMMIT_BRANCH == 'main'
      changes:
        - docs/**/*
  image: docker-private-snapshots.gesis.intra/gesis/methods-hub/quarto:latest
  dependencies: []
  script:
    - quarto check
    - quarto render docs -t html --output-dir public
    - mv docs/public .
  artifacts:
    paths:
      - public


