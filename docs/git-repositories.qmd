# Git Repositories

Here we will configure a local copy of the source code.

``` bash
git clone git@git.gesis.org:ilcm/orc2.git
```

We host most of repositories both on GitHub and GESIS GitLab and it is very important that we keep them in sync.
GitHub repos are the public ones which we use for pulling changes.
On GESIS GitLab we have our CI/CD running which makes it important to be synced.
This means any time when we push to public (GitHub), we also push to GitLab.

## Two remote to push for `orc2`

```bash
cd orc2
```

```bash
git remote set-url origin --push --add git@github.com:gesiscss/orc2.git
```

```bash
git remote set-url origin --push --add git@git.gesis.org:ilcm/orc2.git
```

## Decrypt Secret Files

Passwords are kept encrypted using [`git-crypt`](https://www.agwa.name/projects/git-crypt/). Follow the Installation instructions at @sec-install-git-crypt.

```bash
cd orc2
```

```bash
cat .git/config
```

```
[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote "origin"]
        url = git@github.com:gesiscss/orc.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
        remote = origin
        merge = refs/heads/master
```

 Use 

```bash
git-crypt unlock GESIS-Notebooks/orc2/git_crypt_secret_key
```

to add the a couple of instructions to `.git/config`.

::: {.callout-important}

`git_crypt_secret_key` is stored on the [NextCloud server](https://gesisbox.gesis.org/).

:::

::: {.callout-note}

Use `git-crypt status` to check for errors.

:::

::: {.callout-note}

Use `git-crypt lock` to re-encrypt the files.
:::